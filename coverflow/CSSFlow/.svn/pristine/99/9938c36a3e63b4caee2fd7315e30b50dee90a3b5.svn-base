

<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  		<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no"/>
		<meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <META http-equiv="Page-enter" content="revealTrans(Transition=23,Duration=6.0)">
<META http-equiv="Page-exit" content="revealTrans(Transition=23,Duration=6.0)">
  <title>device orientation webkit</title>
   <script src="http://ajax.googleapis.com/ajax/libs/dojo/1.6.0/dojo/dojo.xd.js" type="text/javascript"></script>
   <script type="text/javascript">
   function Wtr(domNode,dur){
     window.wtr_sn = window.wtr_sn || 1;
     window.wtr_sn ++;
     this.id = "wtr_" + window.wtr_sn;
     dojo.addClass(domNode,this.id);
     this.domNode = domNode;
     this.dur = dur;  
     dojo.create("style",{},document.head,"first");
     this.styleSheet =   document.styleSheets[0];
    this.styleSheet.insertRule("." + this.id + "{-webkit-transition: -webkit-transform "+dur+"s;}");
     this.styleSheet.insertRule("." + this.id + "{display:block}");
     this.transformState={
     }     
    domNode.wtr = this;
   }
   Wtr.prototype.transform=function(tag,value){
   console.log("transform",tag,value);
     var _self = this;
     var _csstext=" -webkit-transform:";
     if (_self.transformState[tag] == undefined){
        _self.transformState[tag] = value;
     }
     else{
        var op = _self.transformState[tag].match(/([-.\d]+)(\w+)/) ;
        var np = value.match(/([-.\d]+)(\w+)/);
        _self.transformState[tag] = (np[1]*1 + op[1]*1) +op[2];//现有值+新值+单位
     }
     for (x in _self.transformState){
      _csstext += x+"("+ _self.transformState[x] + ") ";
     }
     _cssText ="." + _self.id + "{" + _csstext + " !important}";
     console.log("_cssText",_cssText);
     _self.styleSheet.insertRule(_cssText);
     _self.styleSheet.deleteRule(1);
     console.log("_self.styleSheet.cssRules[0].cssText",_self.styleSheet.cssRules[0].cssText,_self.styleSheet)
   }
  dojo.addOnLoad(function(){
    var l1=dojo.byId("l1");
    var l2=dojo.byId("l2");
    var l3=dojo.byId("l3");
    var p=new Wtr(l1,1);
        var p=new Wtr(l2,0.1);
   // l1.wtr.transform("translateZ","-100px");
    window.addEventListener('deviceorientation', function(evt){
     //dojo.byId("shape").innerHTML="deviceorientation:<br>"+"evt.gamma:"+evt.gamma+"<br>evt.beta:"+evt.beta+"<br>evt.alpha:"+evt.alpha ;
     var _cssText 
    if(dojo.byId("tigan").checked) {
     _cssText= "." + l2.wtr.id + "{-webkit-transform:"  + " rotateX(" + (0-evt.gamma) + "deg)" + " rotateZ(" + (0-evt.alpha) + "deg)"+ " rotateY(" + (0-evt.beta) + "deg)" + " !important}";
     }
     else{
     _cssText= "." + l2.wtr.id + "{-webkit-transform:"  + " rotateX(" + evt.gamma + "deg)" + " rotateZ(" + evt.alpha + "deg)"+ " rotateY(" + evt.beta + "deg)" + " !important}";
     }
     
         l2.wtr.styleSheet.insertRule(_cssText);
     l2.wtr.styleSheet.deleteRule(1);
     dojo.byId("alpha").innerHTML=evt.alpha.toFixed(2);
     dojo.byId("beta").innerHTML=evt.beta.toFixed(2);
     dojo.byId("gamma").innerHTML=evt.gamma.toFixed(2);
    }, false);
   /* 
    window.addEventListener('devicemotion', function(evt){
    //console.log(evt);
     dojo.byId("shape").innerHTML="devicemotion:<br>"+"evt.accelerationIncludingGravity.x:<br>"+evt.accelerationIncludingGravity.x;
     var _cssText = "." + l1.wtr.id + "{-webkit-transform:" + " rotateX(" + evt.gamma + "deg)" + " rotateZ(" + evt.alpha + "deg)"+ " rotateY(" + evt.beta + "deg)" + " !important}";
     //    l1.wtr.styleSheet.insertRule(_cssText);
     //l1.wtr.styleSheet.deleteRule(1);
    }, false);
    */
    
		      //      window.addEventListener('devicemotion', this.orientationListener, false);
    //var p=new Wtr(l2,1);
    //var p=new Wtr(l3,1);
    var step = "20deg";
    var step2 = "20px";
   dojo.connect(dojo.byId("showbiaoc"),"onclick",function(){
       dojo.toggleClass("l3", "biaoc"); 
    })
   dojo.connect(dojo.byId("btnRight"),"onclick",function(){
      l1.wtr.transform("rotateY",step);
    })   
   dojo.connect(dojo.byId("btnLeft"),"onclick",function(){
      l1.wtr.transform("rotateY","-"+step);
    })
   dojo.connect(dojo.byId("btnUp"),"onclick",function(){
       l1.wtr.transform("rotateX",step);
    })
   dojo.connect(dojo.byId("btnDown"),"onclick",function(){
      l1.wtr.transform("rotateX", "-"+step);
    })
    
    dojo.connect(document.body,"onkeyup",function(x){
      console.log(x.keyIdentifier,x.keyCode,x);
      switch(x.keyIdentifier){
      case "Right":
        if(x.shiftKey) l1.wtr.transform("translateX",step2)
        else l1.wtr.transform("rotateY",step);
        break
      case "Left":
        if(x.shiftKey) l1.wtr.transform("translateX","-"+step2)
        else l1.wtr.transform("rotateY","-"+step);
        break
      case "Up":
        if(x.shiftKey) l1.wtr.transform("translateY","-"+step2)
        else l1.wtr.transform("rotateX",step);
                break
      case "Down":
        if(x.shiftKey) l1.wtr.transform("translateY",step2)
        else l1.wtr.transform("rotateX", "-"+step);
                break
      case "PageUp":
        if(x.shiftKey) l1.wtr.transform("translateZ",step2)
        else l1.wtr.transform("rotateZ",step);
        break           
      case "PageDown":
        if(x.shiftKey) l1.wtr.transform("translateZ","-"+step2)
        else l1.wtr.transform("rotateZ","-"+step);
        break     
      default:
    }
   }) 
  })
   </script>

  <style type="text/css" media="screen">
  html{      height: 100%;}
    body {
      background-color: black;
      color: white;
      font-family: 'Lucida Grande', Verdana, Arial;
      font-size: 40px;
        height: 100%;
        padding:0px;margin:0px;
        -web-box-sizing:border-box;
    }
  #main{
  width: 100%;
      height: 100%;
    display: -webkit-box;
  }
#right{
width: 15%;
      border: 1px solid grey;
      font-size:20px;
      position:absolute; z-index:3
}
    #container {

      border: 1px solid white;
      margin:0 2%;
      width: 80%;
      height: 100%;
      -webkit-perspective: 800; /* For compatibility with iPhone 3.0, we leave off the units here */
      -webkit-perspective-origin: 50% 50%;      
    }
    #stage {
      width: 100%;
      height: 100%;
      -webkit-transition: -webkit-transform 2s;
      -webkit-transform-style: preserve-3d;
            -webkit-transform:  translateZ(-100px) ;
    }
    #l1,#l2,#l3 {
      width: 100%;
      height: 100%;
      -webkit-transform-style: preserve-3d;
    }

    #shape {
            background-image:url('b.gif');  
                background-position:center;
                background-repeat: no-repeat;
      position: absolute ;
   -webkit-transform: translateZ(-160px);
      margin:auto;
      height: 100%;
      width: 100%;
      -webkit-transform-style: preserve-3d;
    }
              .biaoc .zb{ background-image:url('biaoc.png');  }
    .zb{
        background-position:center;
                  opacity: 0.7;
      position: absolute;
      width: 100%;
      height: 100%;
    }
    #Nony{
      -webkit-transform: rotateX(90deg)  translateZ(0px) ;
    }
  #Nonz{
    }
  #Nonx{
      -webkit-transform: rotateY(90deg) ;
    }
   
    
  </style>

</head>
<body>
<div id="main">
<div id="left">
</div>
  <div id="container">
    <div id="stage" class="yun_">
      <div id="l1">      <div id="l2">      <div id="l3">
        <div id="Nony" class="zb" >flat-y</div>
        <div id="Nonz" class="zb">flat-z</div>
        <div id="Nonx" class="zb">flat-x</div>
        <div id="shape" >
        </div>        
      </div></div></div>
    </div>
  </div>
  <div id="right">
    x:<span id="gamma"></span><br>
    y:<span id="alpha"></span><br>
    z:<span id="beta"></span><br>
   体感反向 <input type="checkbox" id="tigan"></input>
<button id="showbiaoc" >显示坐标</button>
<button id="btnRight" >Right</button>
<button id="btnLeft" >Left</button>
<button id="btnUp" >Up</button>
<button id="btnDown" >Down</button>
  </div>
</div>  
</body>
</html>
