<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">

<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Morphing Power Cubes</title>
  <style type="text/css" media="screen">
    body {
      background-color: black;
      color: white;
      font-family: 'Lucida Grande', Verdana, Arial;
      font-size: 12px;
      background-image: -webkit-gradient(radial,
                            50% 500, 1,
                            50% 500, 400,
                            from(rgba(255, 255, 255, 0.3)),
                            to(rgba(255, 255, 255, 0)));
     background-repeat: no-repeat;
    }

    #container {
      width: 100%;
      height: 700px;
      -webkit-perspective: 800; /* For compatibility with iPhone 3.0, we leave off the units here */
      -webkit-perspective-origin: 50% 225px;
    }
    #stage {
      width: 100%;
      height: 100%;
      -webkit-transition: -webkit-transform 2s;
      -webkit-transform-style: preserve-3d;
      -webkit-transform: rotateX(-20deg); 
    }
    
    #shape {
      position: relative;
      top: 160px;
      margin: 0 auto;
      height: 200px;
      width: 260px;
      -webkit-transform-style: preserve-3d;
    }

    .plane {
      background-image:url('1628220_125235001386_2.jpg');  
      position: absolute;
      height: 200px;
      width: 300px;
      border: 1px solid white;
      -webkit-border-radius: 12px;
      -webkit-box-sizing: border-box;
      text-align: center;
      font-family: Times, serif;
      font-size: 124pt;
      -webkit-transition: -webkit-transform 2s, opacity 2s;
      -webkit-backface-visibility: hidden;     
      -webkit-box-shadow:0 0 10px rgba(192,168,168,51);
            opacity: 0.8;
    }
    

    #shape.backfaces .plane {
      -webkit-backface-visibility: visible;
    }
    
    #shape {
      -webkit-animation: spin 12s infinite linear;
    }

    @-webkit-keyframes spin {
      from { -webkit-transform: rotateY(0); }
      to   { -webkit-transform: rotateY(-360deg); }
    }

    /* ---------- cube styles ------------- */
    .cube > .one {
      -webkit-transform: scale3d(1, 1, 1) rotateX(90deg) rotateY(-40deg) translateZ(115px)  rotate(90deg); 
    }
    .cube > .zero {
      -webkit-transform: scale3d(1, 1, 1) rotateX(90deg) rotateY(40deg) translateZ(115px)  rotate(-90deg); 
    }
    .cube > .tw_o {
      -webkit-transform:  scale3d(0.66, 1, 1) translateZ(150px) translateY(-30px);
    }
    
        .cube > .two {
    height: 220px;      width: 200px;
         border: 1px;
      background-image:url('door.png');  
      background-size:100%;  
     -webkit-box-shadow:0 0 0px black;
      -webkit-transform:   translateZ(150px) translateY(-50px)  translateX(50px);
    }
     .cube > .three {
      -webkit-transform:  scale3d(1, 0.66, 1) rotateY(90deg) translateZ(100px);
    }

    .cube > .four {
    height: 220px;      width: 200px;
         border: 1px;
      background-image:url('end.png');  
            background-size:100%;  
                 -webkit-box-shadow:0 0 0px black;
      -webkit-transform:  rotateY(180deg) translateZ(150px) translateY(-50px) translateX(-50px);
    }

    .cube > .five {
      -webkit-transform: scale3d(1, 0.66, 1) rotateY(-90deg) translateZ(100px);
    }
    .cube > .six {
      -webkit-transform: scale3d(1, 1, 1) rotateX(-90deg) translateZ(70px) rotate(90deg);
    }




    .controls {
      width: 80%;
      margin: 0 auto;
      padding: 5px 20px;
      -webkit-border-radius: 12px;
      background-color: rgba(255, 255, 255, 0.5);
    }
    .controls > div {
      margin: 10px;
    }
  </style>
  <script type="text/javascript" charset="utf-8">
    function hasClassName(inElement, inClassName)
    {
        var regExp = new RegExp('(?:^|\\s+)' + inClassName + '(?:\\s+|$)');
        return regExp.test(inElement.className);
    }

    function addClassName(inElement, inClassName)
    {
        if (!hasClassName(inElement, inClassName))
            inElement.className = [inElement.className, inClassName].join(' ');
    }

    function removeClassName(inElement, inClassName)
    {
        if (hasClassName(inElement, inClassName)) {
            var regExp = new RegExp('(?:^|\\s+)' + inClassName + '(?:\\s+|$)', 'g');
            var curClasses = inElement.className;
            inElement.className = curClasses.replace(regExp, ' ');
        }
    }

    function toggleClassName(inElement, inClassName)
    {
        if (hasClassName(inElement, inClassName))
            removeClassName(inElement, inClassName);
        else
            addClassName(inElement, inClassName);
    }

    function toggleShape()
    {
      var shape = document.getElementById('shape');
      if (hasClassName(shape, 'ring')) {
        removeClassName(shape, 'ring');
        addClassName(shape, 'cube');
      } else {
        removeClassName(shape, 'cube');
        addClassName(shape, 'ring');
      }
      
      // Move the ring back in Z so it's not so in-your-face.
      var stage = document.getElementById('stage');
      if (hasClassName(shape, 'ring'))
        stage.style.webkitTransform = 'translateZ(-200px)';
      else
        stage.style.webkitTransform = '';
    }
    
    function toggleBackfaces()
    {
      var backfacesVisible = document.getElementById('backfaces').checked;
      var shape = document.getElementById('shape');
      if (backfacesVisible)
        addClassName(shape, 'backfaces');
      else
        removeClassName(shape, 'backfaces');
    }
  </script>
</head>
<body>

  <div class="controls">
  
    <div><button onclick="toggleShape()">Toggle Shape</button></div>
    <div><input type="checkbox" id="backfaces" onclick="toggleBackfaces()" checked><label for="backfaces">Backfaces visible</label></div>
  </div>

  <div id="container">
    <div id="stage">
      <div id="shape" class="cube backfaces">
               <div class="plane zero">0</div>
             <div class="plane one">1</div>
        <div class="plane two">2</div>
        <div class="plane three">3</div>
        <div class="plane four">4</div>
        <div class="plane five">5</div>
                <div class="plane six">6</div>
      </div>
    </div>
  </div>
  
</body>
</html>
